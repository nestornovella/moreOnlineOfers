
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Product{
  id String @id @default(uuid()) @db.Uuid
  name String 
  description String?
  categories Category[] @relation("productsCategories")
  parentId String? @db.Uuid 
  parent Product? @relation("productChild",fields: [parentId], references: [id], onDelete: Cascade)
  varieties Product[] @relation("productChild")
  seller SellerProduct[] @relation("seller-product")
  price Float
  image String?
}

model Category{
  id String @id @default(uuid()) @db.Uuid
  name String @unique
  products Product[] @relation("productsCategories")
  parentId String? @db.Uuid
  parent Category? @relation("subCategory", fields: [parentId], references: [id], onDelete: Cascade)
  subCategory Category[] @relation("subCategory")
}

model Seller{
  id String @id @default(uuid()) @db.Uuid
  name String 
  phoneNumber String
  password String 
  porcent Float
  orders Order[] @relation("sellerOrder")
  admin Boolean @default(false)
  products SellerProduct[] @relation("seller-item")
}

model SellerProduct{
  id String @id @default(uuid()) @db.Uuid
  porcent Float @default(0.0)
  sellerId String? @db.Uuid
  seller Seller? @relation("seller-item",fields: [sellerId], references: [id])
  productId String @db.Uuid
  product Product @relation("seller-product", fields: [productId], references: [id])
  active Boolean @default(false)
}

model Order{
  id String @id @default(uuid()) @db.Uuid
  order Json 
  total Float
  totalDiscount Float
  sellerId String @db.Uuid
  seller Seller @relation("sellerOrder", fields: [sellerId], references: [id])
  viewed Boolean @default(false)
  completed Boolean @default(false)
  delivered Boolean @default(false)
}




